name: Backend CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-backend:
    runs-on: ubuntu-latest
    environment: .env

    env: 
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      PORT: ${{ secrets.PORT }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Create .env file from GitHub Secrets
      run: |
        echo "DB_HOST=${{ secrets.DB_HOST }}" > backend/.env
        echo "DB_USER=${{ secrets.DB_USER }}" >> backend/.env
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> backend/.env
        echo "DB_NAME=${{ secrets.DB_NAME }}" >> backend/.env
        echo "PORT=${{ secrets.PORT }}" >> backend/.env

    - name: Verify .env file contents
      run: cat backend/.env
      
    - name: Cache node_modules 
      uses: actions/cache@v3
      with:
        path: backend/node_modules 
        key: ${{ runner.os }}-backend-${{ hashFiles('backend/package-lock.json') }} 
        restore-keys: |
          ${{ runner.os }}-backend-

    - name: Install dependencies
      run: |
        cd backend
        npm ci

    - name: Upload backend artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-build
        path: |
          backend/  
          backend/node_modules/  

  test-backend:
    needs: build-backend  
    runs-on: ubuntu-latest

    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      PORT: ${{ secrets.PORT }}    

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Create .env file from GitHub Secrets
      run: |
        echo "DB_HOST=${{ secrets.DB_HOST }}" > backend/.env
        echo "DB_USER=${{ secrets.DB_USER }}" >> backend/.env
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> backend/.env
        echo "DB_NAME=${{ secrets.DB_NAME }}" >> backend/.env
        echo "PORT=${{ secrets.PORT }}" >> backend/.env

    - name: Verify .env file contents
      run: cat backend/.env

    - name: Cache node_modules
      uses: actions/cache@v3
      with:
        path: backend/node_modules
        key: ${{ runner.os }}-backend-${{ hashFiles('backend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-backend-

    - name: Install dependencies
      run: |
        cd backend
        npm install


    - name: Run tests with coverage
      run: |
        cd backend
        npm run test:ci

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: backend-coverage
        path: backend/coverage/